// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`webpackConfig > should allow to append and prepend plugins 1`] = `
[
  DefinePlugin {
    "definitions": {
      "foo": "2",
    },
  },
  DefinePlugin {
    "definitions": {
      "process.env.ASSET_PREFIX": """",
      "process.env.NODE_ENV": ""test"",
    },
  },
  MiniCssExtractPlugin {
    "_sortedModulesCache": WeakMap {},
    "options": {
      "chunkFilename": "static/css/async/[name].css",
      "experimentalUseImportModule": undefined,
      "filename": "static/css/[name].css",
      "ignoreOrder": true,
      "runtime": true,
    },
    "runtimeOptions": {
      "attributes": undefined,
      "insert": undefined,
      "linkType": "text/css",
    },
  },
  HotModuleReplacementPlugin {
    "options": {},
  },
  ProgressPlugin {
    "compileTime": null,
    "dependenciesCount": 10000,
    "handler": [Function],
    "hasCompileErrors": false,
    "id": "Client",
    "modulesCount": 5000,
    "name": "ProgressPlugin",
    "percentBy": null,
    "profile": false,
    "showActiveModules": false,
    "showDependencies": true,
    "showEntries": true,
    "showModules": true,
  },
  DefinePlugin {
    "definitions": {
      "foo": "1",
    },
  },
]
`;

exports[`webpackConfig > should allow to use tools.webpackChain to modify config 1`] = `
{
  "context": "<ROOT>",
  "devtool": "eval",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should allow tools.webpack to be an array 1`] = `
{
  "context": "<ROOT>",
  "devtool": "source-map",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should allow tools.webpack to be an object 1`] = `
{
  "context": "<ROOT>",
  "devtool": "eval",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should allow tools.webpack to modify config object 1`] = `
{
  "context": "<ROOT>",
  "devtool": "eval",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should allow tools.webpack to return config 1`] = `
{
  "context": "<ROOT>",
  "devtool": "eval",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should allow tools.webpackChain to be an array 1`] = `
{
  "context": "<ROOT>",
  "devtool": "source-map",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;

exports[`webpackConfig > should provide mergeConfig util in tools.webpack function 1`] = `
{
  "context": "<ROOT>",
  "devtool": "eval",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "parser": {
      "javascript": {
        "exportsPresence": "error",
      },
    },
  },
  "name": "Client",
  "performance": {
    "maxAssetSize": 3000000,
    "maxEntrypointSize": 3000000,
  },
}
`;
